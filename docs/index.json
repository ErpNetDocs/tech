{
  "advanced/generation-procedures/overview.html": {
    "href": "advanced/generation-procedures/overview.html",
    "title": "Generation Procedures Overview | ERP.net Tech Docs",
    "keywords": "Generation Procedures Overview Generation Procedures are automated procedures, which generate Documents from other documents. They are the basis for the Document Flow . Generation Procedures are the arrows in the document flow diagrams. Setup In order to start generating documents, the Generation Procedures need to be configured. The configuration is performed in the Document Type entity, in the Document Type Routes child entity. Each Document Type Route is a configuration for a single Generation Procedure."
  },
  "advanced/overview.html": {
    "href": "advanced/overview.html",
    "title": "Advanced Section | ERP.net Tech Docs",
    "keywords": "Advanced Section This section contains information for advanced concepts, systems and deep dive in the security. It is intended primarily for advanced ERP implementation consultants. Advanced Systems User Data Attributes User Calculated Attributes User Business Rules Track Changes Extensible Data Objects Advanced Concepts Master / Detail Attributes Object / Relational Mapping Aggregates"
  },
  "advanced/user-business-rules/overview.html": {
    "href": "advanced/user-business-rules/overview.html",
    "title": "User Business Rules | ERP.net Tech Docs",
    "keywords": "User Business Rules"
  },
  "advanced/user-calculated-attributes/examples/TotalQuantityAndScrapQuantityInRecipeIngredients.html": {
    "href": "advanced/user-calculated-attributes/examples/TotalQuantityAndScrapQuantityInRecipeIngredients.html",
    "title": "Total Quantity And Scrap Quantity In Recipe Ingredients | ERP.net Tech Docs",
    "keywords": "Total Quantity And Scrap Quantity In Recipe Ingredients If the user wants to see what is the total Quantity of the material in a Recipe which would include the Used Quantity and the Scrap Rate, he would add the following Calculated Attribute: Repository Name: Production.Technologies.RecipeIngredients Name : TotalUsedQuantity And the Calculated Attribute expressions are as follows: 10: ADD ATTRIB:UsageQuantityValue EXP:20 20: MULTIPLY ATTRIB:UsageQuantityValue ATTRIB:ScrapRate Explanation: 10: Add the result from expression 20 to the attribute UsageQuantityValue 20: Multiply UsageQuantityValue and ScrapRate"
  },
  "advanced/user-calculated-attributes/operators/add.html": {
    "href": "advanced/user-calculated-attributes/operators/add.html",
    "title": "ADD - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "ADD - Calculated Attribute Operator Specification Value Name ADD Description The operator returns the sum of two numbers. Parameter 1 Name Number1 Parameter 1 Type numeric type - int, double or decimal Parameter 2 Name Number2 Parameter 2 Type numeric type - int, double or decimal Parameter 3 Name Parameter 3 Type Return Value Number1 + Number2 Note Ensure that the numbers which are summed up have the same type. For example, Parameter 1 and Parameter 2 must be both integers, or doubles, or decimals. Example See the example in Total Quantity And Scrap Quantity In Recipe Ingredients"
  },
  "advanced/user-calculated-attributes/operators/adddays.html": {
    "href": "advanced/user-calculated-attributes/operators/adddays.html",
    "title": "ADDDAYS - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "ADDDAYS - Calculated Attribute Operator Specification Value Name ADDDAYS Description Adds the specified number of days to the date. Parameter 1 Name Date Parameter 1 Type Date Parameter 2 Name NumDays Parameter 2 Type int Parameter 3 Name Parameter 3 Type Return Value Date + NumDays Example See the example in @(Specific Day From Document Date)."
  },
  "advanced/user-calculated-attributes/operators/and.html": {
    "href": "advanced/user-calculated-attributes/operators/and.html",
    "title": "AND - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "AND - Calculated Attribute Operator Specification Value Name AND Description Checks if the two conditions are True. If so - the operator returns True. If any of the specified conditions are not True, the operator returns False. Parameter 1 Name Condition1 Parameter 1 Type boolean Parameter 2 Name Condition2 (optional) Parameter 2 Type boolean Parameter 3 Name Condition3 (optional) Parameter 3 Type boolean Return Value Condition1 AND Condition2 Note Parameter 1 and Parameter 2 are optional. If only Parameter 1 has value, the result is its value (Parameter 1)."
  },
  "advanced/user-calculated-attributes/operators/cast.html": {
    "href": "advanced/user-calculated-attributes/operators/cast.html",
    "title": "CAST - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "CAST - Calculated Attribute Operator Specification Value Name CAST Description Casts the parameter to the specified type. Parameter 1 Name param Parameter 1 Type any type Parameter 2 Name type Parameter 2 Type string - 'System.Int32', 'System.String', 'System.Decimal', 'System.Double' and all standart .net types. Parameter 3 Name Parameter 3 Type Return Value Returns the param converted to the type. Note The CAST operator is a secondary operator, used by the other operators to convert their parameters to the same type. The type is usually entered as a constant (CONST). Example See the example in @(How to get specific field of a parent document?)"
  },
  "advanced/user-calculated-attributes/operators/ceiling.html": {
    "href": "advanced/user-calculated-attributes/operators/ceiling.html",
    "title": "CEILING - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "CEILING - Calculated Attribute Operator Specification Value Description Returns the smallest integer that is greater than or equal to the specified number. Parameter 1 Name Number1 Parameter 1 Type double or decimal Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value The nearest integer which is larger than Number1."
  },
  "advanced/user-calculated-attributes/operators/concat.html": {
    "href": "advanced/user-calculated-attributes/operators/concat.html",
    "title": "CONCAT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "CONCAT - Calculated Attribute Operator Specification Value Description Concatenates two strings. Parameter 1 Name String1 Parameter 1 Type string Parameter 2 Name String2 Parameter 2 Type string Parameter 3 Name - Parameter 3 Type - Return Value String1 + String2"
  },
  "advanced/user-calculated-attributes/operators/convert.html": {
    "href": "advanced/user-calculated-attributes/operators/convert.html",
    "title": "CONVERT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "CONVERT - Calculated Attribute Operator Specification Value Description Returns an object of the specified type and whose value is equivalent to the specified object. This conversion requires absolutely correct input data - if the data is not in the correct form, data loss may occur.For example: if the user tries to convert the string value of '3.12' to decimal, the conversion would be successful.If the conversion of the string is not possible, this may lead to data loss, but no error would be returned. Parameter 1 Name param Parameter 1 Type decimal, int, string or date Parameter 2 Name type Parameter 2 Type string - 'System.Int32', 'System.String', 'System.Decimal', 'System.DateTime' and all standard .net types Parameter 3 Name - Parameter 3 Type - Return Value Returns the param converted to the type. Example 10: MULTIPLY ATTRIB:StandardPricePerLotValue EXP:20 20: CONVERT EXP:30 CONST:System.Decimal 30: CAST ATTRIB: @CustomProperty1 CONST: System.String Note When conversion from CustomPropertyValue to numeric value (for example Decimal) is processed, first a CAST must be applied - the CustomPropertyValue must be cast to string! So, if a user needs to create a value from the standard price per lot of the product multiplied by a coefficient stored as a product's custom property @CustomProperty1, a calculated attribute can be created. If the repository of the product is General.Products.Products, its expressions would be as follows: 10: MULTIPLY ATTRIB:StandardPricePerLotValue EXP:20 20: CONVERT ATTRIB: @CustomProperty1 CONST: System.Decimal This is incorrect attribute. The values of the custom properties are specific type of value and the CONVERT operator does not know how to convert it. So cast of the custom property value to string is required. The correct version of the calculated attribute is: 10: MULTIPLY ATTRIB:StandardPricePerLotValue EXP:20 20: CONVERT EXP:30 CONST:System.Decimal 30: CAST ATTRIB: @CustomProperty1 CONST: System.String"
  },
  "advanced/user-calculated-attributes/operators/count.html": {
    "href": "advanced/user-calculated-attributes/operators/count.html",
    "title": "COUNT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "COUNT - Calculated Attribute Operator Specification Value Description Gets the number of elements contained in the list. Parameter 1 Name list Parameter 1 Type list - repository, child. Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value int Introduced In Version 2020.1 Example The following example return the number of lines in the current document (SalesOrder): 10: COUNT CHILD: Lines Note The repository of the attribute is Crm.Sales.SalesOrders If we want to expand the example and if we want to get the number of lines with quantity greater than or equal to 10, the following attribute would do the job: 10: COUNT EXP:20 20: FILTER CHILD: Lines EXP:30 30: GTE ATTRIB: QuantityValue CONST: 10"
  },
  "advanced/user-calculated-attributes/operators/divide.html": {
    "href": "advanced/user-calculated-attributes/operators/divide.html",
    "title": "DIVIDE - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "DIVIDE - Calculated Attribute Operator Specification Value Name DIVIDE Description Divide one number by second number Parameter 1 Name Number1 Parameter 1 Type numeric type - int, double or decimal Parameter 2 Name Number2 Parameter 2 Type numeric type - int, double or decimal Parameter 3 Name Parameter 3 Type Return Value Number1 / Number2"
  },
  "advanced/user-calculated-attributes/operators/equal.html": {
    "href": "advanced/user-calculated-attributes/operators/equal.html",
    "title": "EQUAL - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "EQUAL - Calculated Attribute Operator Specification Value Name EQUAL Description Checks if two values are equal. If they are equal, the return value is True, else - the return value is False. Parameter 1 Name Value1 Parameter 1 Type numeric type - int, double or decimal; string; Parameter 2 Name Value2 Parameter 2 Type numeric type - int, double or decimal; string; Parameter 3 Name Parameter 3 Type Return Value boolean (True or False) Note Ensure that the values which are compared up have the same type. For example, Parameter 1 and Parameter 2 must be both integers, or doubles, or decimals, or strings."
  },
  "advanced/user-calculated-attributes/operators/filter.html": {
    "href": "advanced/user-calculated-attributes/operators/filter.html",
    "title": "FILTER - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "FILTER - Calculated Attribute Operator Specification Value Name FILTER Description Filters the specified list by the condition. Parameter 1 Name list Parameter 1 Type list of objects Parameter 2 Name condition Parameter 2 Type boolean Parameter 3 Name Parameter 3 Type Return Value Returns sub-list, which meets the condition."
  },
  "advanced/user-calculated-attributes/operators/first.html": {
    "href": "advanced/user-calculated-attributes/operators/first.html",
    "title": "FIRST - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "FIRST - Calculated Attribute Operator Specification Value Name FIRST Description Returns the first element in the list. Parameter 1 Name list Parameter 1 Type list of objects Parameter 2 Name Parameter 2 Type Parameter 3 Name Parameter 3 Type Return Value Returns the first element of list."
  },
  "advanced/user-calculated-attributes/operators/floor.html": {
    "href": "advanced/user-calculated-attributes/operators/floor.html",
    "title": "FLOOR - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "FLOOR - Calculated Attribute Operator Specification Value Name FLOOR Description Returns the largest integer less than or equal to the specified number. Parameter 1 Name Number1 Parameter 1 Type double or decimal Parameter 2 Name Parameter 2 Type Parameter 3 Name Parameter 3 Type Return Value Returns the largest integer less than or equal to Number1."
  },
  "advanced/user-calculated-attributes/operators/formatstring.html": {
    "href": "advanced/user-calculated-attributes/operators/formatstring.html",
    "title": "FORMATSTRING - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "FORMATSTRING - Calculated Attribute Operator Specification Value Description Returns the specified object, formatted by the specified rules. Parameter 1 Name Param1 Parameter 1 Type object (any type) Parameter 2 Name Format Parameter 2 Type string - the format argument must contain a valid .NET Framework format string, either as a standard format string (for example, \"C\" or \"D\") or as a pattern of custom characters for dates and numeric values (for example, \"MMMM DD, yyyy (dddd)\"). For more information about the supported format specifiers, see @(Format Specifiers). Parameter 3 Name - Parameter 3 Type - Return Value Param1 as a string formatted by the rule in Format. Example The following expression: FORMATSTRING CONST:150 CONST: C3 returns \"150.000 $\" (and the decimal symbol separator and the currency symbol depends on the local regional settings). For more information about the supported format specifiers, see @(Format Specifiers). Note The Format is entered as a constant (CONST). If we have a calculated attribute with the following expression (the repository is not important): - FORMATSTRING CONST:2020-03-15 CONST: yyyy MM dddd The output of the calculated attribute would be \"2020 03 Sunday\". - FORMATSTRING CONST:150 CONST: n6 The output of the calculated attribute would be \"150,000000\" (the decimal symbol separator depends on the local regional settings). - FORMATSTRING CONST:150 CONST: C The output of the calculated attribute would be \"150.00 $\" (the currency depends on the local regional settings). - c The output of the calculated attribute would be \"150.00 $\" (the currency depends on the local regional settings)."
  },
  "advanced/user-calculated-attributes/operators/getobjvalue.html": {
    "href": "advanced/user-calculated-attributes/operators/getobjvalue.html",
    "title": "GETOBJVALUE - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "GETOBJVALUE - Calculated Attribute Operator Specification Value Description Gets the specified value from the specified object. This operator is used when the user wants the retrieve a value from object different than the current one. The current object is listed in the 'Repository Name' field in the current row. Parameter 1 Name obj Parameter 1 Type object Parameter 2 Name value Parameter 2 Type attribute value Parameter 3 Name - Parameter 3 Type - Return Value Returns value from obj. Example 10: GETOBJVALUE REF:Customer ATTRIB: DefaultPaymentAccountId // The Repository in this example is Crm.Sales.SalesOrders. // This line returns the Id of the Default Payment Account set in the Customer's definition of the current Sales Order. This value could be used to set the Payment Account in Sales Order through a User Business Rules, for example."
  },
  "advanced/user-calculated-attributes/operators/getvalue.html": {
    "href": "advanced/user-calculated-attributes/operators/getvalue.html",
    "title": "GETVALUE - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "GETVALUE - Calculated Attribute Operator Specification Value Description Gets the value from the current object. Parameter 1 Name Value Parameter 1 Type attribute value Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value Value"
  },
  "advanced/user-calculated-attributes/operators/gt.html": {
    "href": "advanced/user-calculated-attributes/operators/gt.html",
    "title": "GT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "GT - Calculated Attribute Operator Specification Value Description Checks if an attribute value is greater than another attribute's value (or a constant). Parameter 1 Name attribute1 Parameter 1 Type numeric (int, double, decimal) or datetime type Parameter 2 Name attribute2 Parameter 2 Type numeric (int, double, decimal) or datetime type Parameter 3 Name - Parameter 3 Type - Return Value If attribute1 > attribute2 the returned value is True, if else - the operator returns False. Example See the example in @(Compare Unit Price And Standard Unit Price). Note Ensure that the attributes which are compared have the same type. For example, Parameter 1 and Parameter 2 must be both integers, or doubles, or decimals, or datetime."
  },
  "advanced/user-calculated-attributes/operators/gte.html": {
    "href": "advanced/user-calculated-attributes/operators/gte.html",
    "title": "GTE - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "GTE - Calculated Attribute Operator Specification Value Description Checks if an attribute value is greater than or equal to another attribute's value (or a constant). Parameter 1 Name attribute1 Parameter 1 Type numeric (int, double, decimal) or datetime type Parameter 2 Name attribute2 Parameter 2 Type numeric (int, double, decimal) or datetime type Parameter 3 Name - Parameter 3 Type - Return Value If attribute1 >= attribute2 the returned value is True, if else - the operator returns False. Note Ensure that the attributes which are compared have the same type. For example, Parameter 1 and Parameter 2 must be both integers, or doubles, or decimals, or datetime."
  },
  "advanced/user-calculated-attributes/operators/iif.html": {
    "href": "advanced/user-calculated-attributes/operators/iif.html",
    "title": "IIF - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "IIF - Calculated Attribute Operator Specification Value Description Depending on a specified condition, returns the second or the third argument. Parameter 1 Name Condition Parameter 1 Type Boolean Parameter 2 Name TrueValue Parameter 2 Type any type Parameter 3 Name FalseValue Parameter 3 Type any type Return Value When Condition is True, returns TrueValue. When Condition is False, returns FalseValue Example See the example in @(Compare Unit Price And Standard Unit Price)."
  },
  "advanced/user-calculated-attributes/operators/in.html": {
    "href": "advanced/user-calculated-attributes/operators/in.html",
    "title": "IN - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "IN - Calculated Attribute Operator Specification Value Description Determines whether a specified value matches any value in a list. The operator is used in combination with SELECT and FILTER as condition. It can be used to search through values of string and guid types. It cannot be used to search through numeric values or dates. Parameter 1 Name param Parameter 1 Type String or Guid Parameter 2 Name list of values Parameter 2 Type the values must be equal to the param type Parameter 3 Name - Parameter 3 Type - Return Value True or False depending on if param equals a member of the list of values. Example Extract all sales orders with document types DocumentTypeId = 'f207c991-6289-47f9-85ca-f85cd2864263' and DocumentTypeId = '4acbc342-c7e2-43b9-b63c-cb51d20e5ab4'. The calculated attribute would contain the following expressions: 10: SELECT REPO: Crm.Sales.SalesOrders EXP: 20 20: WHERE EXP:30 30: IN ATTRIB: DocumentTypeId CONST: f207c991-6289-47f9-85ca-f85cd2864263, 4acbc342-c7e2-43b9-b63c-cb51d20e5ab4 Note Single quotes are only necessary when the values which we compare to are strings."
  },
  "advanced/user-calculated-attributes/operators/incnum.html": {
    "href": "advanced/user-calculated-attributes/operators/incnum.html",
    "title": "INCNUM - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "INCNUM - Calculated Attribute Operator Specification Value Description The INCNUM operator increases the value of its parameter by 1. The operator can be used only for String values whоose last character is a number. Parameter 1 Name Value Parameter 1 Type string Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value ++Value Examples If the user tries to increment the string value 'AA01', the incrementation will be successful and result will be 'AA02'. If the user tries to increment a value whoоse type is Decimal, Int or Date, the incrementation won't be successful and the Calculated Attribute won't be compilated. If the value is a string whose last character is not a number ('AA', for example), the incrementation won't be successful. The INCNUM operator can be used for consecutive numbering of documents and nomenclatures. This simple example returns 'AA02': 10: INCNUM CONST:AA01 The example below shows how to increase the LotNumber of the Lot by 1 with the INCNUM operator: Logistics.Inventory.Lots => 10: INCNUM ATTRIB:Number"
  },
  "advanced/user-calculated-attributes/operators/left.html": {
    "href": "advanced/user-calculated-attributes/operators/left.html",
    "title": "LEFT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "LEFT - Calculated Attribute Operator Specification Value Description Gets the first n characters of a string. Parameter 1 Name String Parameter 1 Type string Parameter 2 Name NumChars Parameter 2 Type int Parameter 3 Name - Parameter 3 Type - Return Value Returns the first Numchars characters of String."
  },
  "advanced/user-calculated-attributes/operators/len.html": {
    "href": "advanced/user-calculated-attributes/operators/len.html",
    "title": "LEN - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "LEN - Calculated Attribute Operator Specification Value Description Returns the length of the string. Parameter 1 Name String Parameter 1 Type string Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value Returns the length of a string. For example, if String is 'abc', the operator would return 3."
  },
  "advanced/user-calculated-attributes/operators/like.html": {
    "href": "advanced/user-calculated-attributes/operators/like.html",
    "title": "LIKE - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "LIKE - Calculated Attribute Operator Specification Value Description Searches for a specified pattern in a string. The '%' symbol is used to define 0 or more characters before and after the searched string. '_' is used to define specifically 1 character. Parameter 1 Name String1 Parameter 1 Type string Parameter 2 Name Mask Parameter 2 Type string Parameter 3 Name - Parameter 3 Type - Return Value True in case String1 matches Mask. False in case String1 does not match the Mask. Examples 'a%' → Finds any values that start with \"a\". '%a' → Finds any values that end with \"a\". '%a%' → Finds any values that have \"a\" in any position. '_a%' → Finds any values that have \"a\" in the second position. 'a_%_%' → Finds any values that start with \"a\" and are at least 3 characters in length. 'a%o' → Finds any values that start with \"a\" and ends with \"o\". Calculated Attribute: Repository: General.Products.Products 10 LIKE EXP 20 CONST %shoe_ 20 CAST ATTRIB Name CONST System.String Calculated Attribute Result: ProductName = sports shoes → True ProductName = shoes → True ProductName = sports shoess → False ProductName = sports shoe → False ProductName = sports jacket → False"
  },
  "advanced/user-calculated-attributes/operators/list.html": {
    "href": "advanced/user-calculated-attributes/operators/list.html",
    "title": "LIST - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "LIST - Calculated Attribute Operator Specification Value Description Returns a list with the string values of the specified attribute of the list of objects.The values in the created list are separated by a separator. If there is no indicated separator, then the list is separated with \", \" (comma + space) by default. Parameter 1 Name list Parameter 1 Type list of objects Parameter 2 Name attribute Parameter 2 Type attribute of the object // An attribute of a referent object could be used as well. For more information, see the example below. Parameter 3 Name separator (optional) // If Parameter3 is not specified, then the default separator is \", \" (comma + space) Parameter 3 Type string Return Value (attributeValue1, attributeValue2, ...) Introduced In Version 2019.1 Example Repository: Crm.Sales.SalesOrders 10: LIST CHILD: Lines EXP: 20 CONST: '; ' 20: GETOBJVALUE REF: Product ATTRIB: Name Returned Value: 'ProductsName1; ProductName2 ...'"
  },
  "advanced/user-calculated-attributes/operators/lt.html": {
    "href": "advanced/user-calculated-attributes/operators/lt.html",
    "title": "LT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "LT - Calculated Attribute Operator Specification Value Description Checks if an attribute value is smaller than another attribute's value (or a constant). Parameter 1 Name attribute1 Parameter 1 Type numeric (int, double, decimal) or datetime type Parameter 2 Name attribute2 Parameter 2 Type numeric (int, double, decimal) or datetime type Parameter 3 Name - Parameter 3 Type - Return Value If attribute1 < attribute2 the returned value is True, if else - the operator returns False. Note Ensure that the attributes which are compared have the same type. For example, Parameter 1 and Parameter 2 must be both integers, or doubles, or decimals, or datetime."
  },
  "advanced/user-calculated-attributes/operators/lte.html": {
    "href": "advanced/user-calculated-attributes/operators/lte.html",
    "title": "LTE - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "LTE - Calculated Attribute Operator Specification Value Description Checks if an attribute value is smaller than or equal to another attribute's value (or a constant). Parameter 1 Name attribute1 Parameter 1 Type numeric (int, double, decimal) or datetime type Parameter 2 Name attribute2 Parameter 2 Type numeric (int, double, decimal) or datetime type Parameter 3 Name - Parameter 3 Type - Return Value If attribute1 <= attribute2 the returned value is True, if else - the operator returns False. Example See the example in @(Compare Unit Price And The Standard Unit Price). Note Ensure that the attributes which are compared have the same type. For example, Parameter 1 and Parameter 2 must be both integers, or doubles, or decimals, or datetime."
  },
  "advanced/user-calculated-attributes/operators/multiply.html": {
    "href": "advanced/user-calculated-attributes/operators/multiply.html",
    "title": "MULTIPLY - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "MULTIPLY - Calculated Attribute Operator Specification Value Description Multiply the specified numbers. Parameter 1 Name Number1 Parameter 1 Type numeric type - int, double or decimal Parameter 2 Name Number2 Parameter 2 Type numeric type - int, double or decimal Parameter 3 Name - Parameter 3 Type - Return Value Number1 * Number2 Example See the example in @(Total Quantity And Scrap Quantity In Recipe Ingredients). Note In one calculated attribute, Parameter 1 Type and Parameter 2 Type must be equal."
  },
  "advanced/user-calculated-attributes/operators/not.html": {
    "href": "advanced/user-calculated-attributes/operators/not.html",
    "title": "NOT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "NOT - Calculated Attribute Operator Specification Value Description Returns logical negation on an expression. Parameter 1 Name Condition Parameter 1 Type boolean Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value False - if Condition is True; True - if Condition is False"
  },
  "advanced/user-calculated-attributes/operators/or.html": {
    "href": "advanced/user-calculated-attributes/operators/or.html",
    "title": "OR - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "OR - Calculated Attribute Operator Specification Value Description Checks if any of the conditions are True. If so - the operator returns True. If all specified conditions are not True, the operator returns False. Parameter 1 Name Condition1 Parameter 1 Type boolean Parameter 2 Name Condition2 Parameter 2 Type boolean Parameter 3 Name - Parameter 3 Type - Return Value Condition1 OR Condition2"
  },
  "advanced/user-calculated-attributes/operators/orderby.html": {
    "href": "advanced/user-calculated-attributes/operators/orderby.html",
    "title": "ORDERBY - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "ORDERBY - Calculated Attribute Operator Specification Value Description Clause, that specifies a column or expression on which the query result set is sorted. Used as a clause of SELECT. Parameter 1 Name attribute Parameter 1 Type any type Parameter 2 Name order (optional) //if not set, the default is ASC Parameter 2 Type const - ASC or DESC Parameter 3 Name inner clauses (optional) Parameter 3 Type expression Return Value Ordered result set of a query by the specified column or expression. Introduced In Version (In implementation) Example 10: SELECT REPO:General.Products.Products EXP:20 20: TOP CONST:5 EXP:30 30: ORDERBY ATTR:PartNumber CONST:ASC EXP:40 40: WHERE ..."
  },
  "advanced/user-calculated-attributes/operators/pos.html": {
    "href": "advanced/user-calculated-attributes/operators/pos.html",
    "title": "POS - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "POS - Calculated Attribute Operator Specification Value Description Searches term in string, returns first position or -1 if not found. Parameter 1 Name term Parameter 1 Type string Parameter 2 Name string Parameter 2 Type string Parameter 3 Name - Parameter 3 Type - Return Value Returns the position of term in string. If there are more than one occurrences of term in string, returns the first position. If term is not part of string, returns -1."
  },
  "advanced/user-calculated-attributes/operators/regex.html": {
    "href": "advanced/user-calculated-attributes/operators/regex.html",
    "title": "REGEX - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "REGEX - Calculated Attribute Operator Specification Value Description Returns whether the string matches the regex mask. Parameter 1 Name String1 Parameter 1 Type string Parameter 2 Name Mask Parameter 2 Type regex expression Parameter 3 Name - Parameter 3 Type - Return Value True - if String1 matches Mask; False - if String1 does not match the Mask ."
  },
  "advanced/user-calculated-attributes/operators/replace.html": {
    "href": "advanced/user-calculated-attributes/operators/replace.html",
    "title": "REPLACE - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "REPLACE - Calculated Attribute Operator Specification Value Description Replaces old with new value in string. Parameter 1 Name String1 Parameter 1 Type string Parameter 2 Name OldValue Parameter 2 Type string Parameter 3 Name NewValue Parameter 3 Type string Return Value A string that is equivalent to String1 except that all instances of OldValue are replaced with NewValue. If OldValue is not found in String1, the operator returns String1."
  },
  "advanced/user-calculated-attributes/operators/right.html": {
    "href": "advanced/user-calculated-attributes/operators/right.html",
    "title": "RIGHT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "RIGHT - Calculated Attribute Operator Specification Value Description Gets the last n characters of a string. Parameter 1 Name String Parameter 1 Type string Parameter 2 Name NumChars Parameter 2 Type int Parameter 3 Name - Parameter 3 Type - Return Value Returns the last NumChars characters of String."
  },
  "advanced/user-calculated-attributes/operators/round.html": {
    "href": "advanced/user-calculated-attributes/operators/round.html",
    "title": "ROUND - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "ROUND - Calculated Attribute Operator Specification Value Description Rounds mathematically with the specified precision. Parameter 1 Name Number Parameter 1 Type double or decimal Parameter 2 Name DecimalPlaces (optional) Parameter 2 Type int Parameter 3 Name - Parameter 3 Type - Return Value Number, rounded up to the digit, specified in DecimalPlaces Note Parameter 2 is optional. If Parameter 2 is not set, it is considered 0 (zero)."
  },
  "advanced/user-calculated-attributes/operators/select.html": {
    "href": "advanced/user-calculated-attributes/operators/select.html",
    "title": "SELECT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "SELECT - Calculated Attribute Operator Specification Value Description Gets the objects matching the clauses. Parameter 1 Name Repository Parameter 1 Type repository Parameter 2 Name Clauses (optional, but highly advisable) // For more information see the 'FILTER AND WHERE filtering of a SELECT' section below) Parameter 2 Type operators ( WHERE , TOP ) Parameter 3 Name - Parameter 3 Type - Return Value Returns a list of objects from Repository matching Clauses. Note The SELECT operator returns limited number of records - 20 000. This limit is only for the returned records count, so as setting much filters as possible are highly recommended (filters in the WHERE clause). Example The WHERE clause of the SELECT statement supports the following operators: AND TOP EQUAL GT GTE LT LTE The operators which are not supported by the SELECT operator but may be used by the FILTER operator are: NOT OR LIKE FILTER AND WHERE filtering of a SELECT Having this in mind is really important when extracting lists from the database. When using SELECT operator we send a request to the database and it is preferred to set as much WHERE filters as possible. But if there is a filter, which is not supported by the EnterpriseOne Server, then the list that is returned by the select may be filtered additionally with the FILTER operator. The disadvantages are that the SELECT statement make a direct request to the database, which may reflect on the productivity and may slow down the calculation of the attribute. When using the SELECT operator the user has to apply as much WHERE filters as possible, because this would limit the amount of data which would be extracted from the database into the client. And then, if the select statement does not provide enough filters, the result from the select may be filtered by the FILTER operator which operates on the already loaded data in the client. Here are some examples to picture the information by far: If there is a need of a list of documents which DocumentTypeId is equal to 'bbd8e7ae-c0e0-4c1b-8730-7d68fa52971e' or '89ca5ca4-ad57-44c7-9b33-2ff44e054bff'. The documents are Work Orders. So the following calculated attribute would be incorrect: 10: SELECT REPO: Production.ShopFloor.WorkOrders EXP: 20 20: WHERE EXP: 30 30: OR EXP: 40 EXP: 50 40: EQUAL CONST: bbd8e7ae-c0e0-4c1b-8730-7d68fa52971e 45: ATTRIB: DocumentTypeId CONST: System.Guid 50: EQUAL EXP:45 CONST: 89ca5ca4-ad57-44c7-9b33-2ff44e054bff This calculated attribute is incorrect and would return errors when used. So, we can set calculated attribute which selects the work orders and then to filter the list, which the SELECT operator returned and apply the FILTER operator for more precision. So the correct calculated attribute is as follows: 10: FILTER EXP:20 EXP: 30 20: SELECT REPO: Production.ShopFloor.WorkOrders 30: OR EXP: 40 EXP: 50 40: EQUAL EXP:45 CONST: bbd8e7ae-c0e0-4c1b-8730-7d68fa52971e 45: CAST ATTRIB: DocumentTypeId CONST: System.Guid 50: EQUAL ATTRIB: DocumentTypeId CONST: 89ca5ca4-ad57-44c7-9b33-2ff44e054bff"
  },
  "advanced/user-calculated-attributes/operators/sort.html": {
    "href": "advanced/user-calculated-attributes/operators/sort.html",
    "title": "SORT - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "SORT - Calculated Attribute Operator Specification Value Description Sorts the input list according to the specified attribute and order. Parameter 1 Name list Parameter 1 Type list Parameter 2 Name attribute Parameter 2 Type any type Parameter 3 Name order (optional) Parameter 3 Type string - ASC or DESC Return Value Returns the input list from parameter1, sorted by the specified attribute and in the specified order. If not specified, the default order is ascending (ASC) Example Take the last line of a sales order (ordered by LineNo), which has quantity >= 0: SalesOrder=> 10: FIRST EXP:20 20: SORT EXP:30 ATTR:LineNo CONST:DESC 30: FILTER CHILD:Lines EXP:40 40: GTE ATTR:QuantityValue CONST:0"
  },
  "advanced/user-calculated-attributes/operators/substring.html": {
    "href": "advanced/user-calculated-attributes/operators/substring.html",
    "title": "SUBSTRING - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "SUBSTRING - Calculated Attribute Operator Specification Value Description Returns a sub-string with the specified start and length. Parameter 1 Name string Parameter 1 Type string Parameter 2 Name start Parameter 2 Type int Parameter 3 Name len Parameter 3 Type int Return Value Part of string, starting from position start and with length of len."
  },
  "advanced/user-calculated-attributes/operators/sum.html": {
    "href": "advanced/user-calculated-attributes/operators/sum.html",
    "title": "SUM - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "SUM - Calculated Attribute Operator Specification Value Description Returns the sum of Value for all elements in the specified list. Parameter 1 Name List Parameter 1 Type list of objects Parameter 2 Name Value Parameter 2 Type numeric type - int, double or decimal Parameter 3 Name - Parameter 3 Type - Return Value Returns the sum of the Values of the elements in the List. Example See the example in @(Total Quantity And Scrap Quantity In Recipe Ingredients)"
  },
  "advanced/user-calculated-attributes/operators/today.html": {
    "href": "advanced/user-calculated-attributes/operators/today.html",
    "title": "TODAY - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "TODAY - Calculated Attribute Operator Specification Value Description This operator returns today's date, according to the server's regional settings. Parameter 1 Name - Parameter 1 Type - Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value Today's date"
  },
  "advanced/user-calculated-attributes/operators/tolower.html": {
    "href": "advanced/user-calculated-attributes/operators/tolower.html",
    "title": "TOLOWER - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "TOLOWER - Calculated Attribute Operator Specification Value Description Returns the string, converted to lowercase. Parameter 1 Name string Parameter 1 Type string Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value string (in lowercase)"
  },
  "advanced/user-calculated-attributes/operators/top.html": {
    "href": "advanced/user-calculated-attributes/operators/top.html",
    "title": "TOP - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "TOP - Calculated Attribute Operator Specification Value Description Clause, returning only the first n elements Parameter 1 Name Number Parameter 1 Type int Parameter 2 Name Clauses Parameter 2 Type operators WHERE Parameter 3 Name - Parameter 3 Type - Return Value The first Number elements. Note The TOP operator is used with the WHERE operator."
  },
  "advanced/user-calculated-attributes/operators/toupper.html": {
    "href": "advanced/user-calculated-attributes/operators/toupper.html",
    "title": "TOUPPER - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "TOUPPER - Calculated Attribute Operator Specification Value Description Returns the string, converted to uppercase. Parameter 1 Name string Parameter 1 Type string Parameter 2 Name - Parameter 2 Type - Parameter 3 Name - Parameter 3 Type - Return Value string (in uppercase)"
  },
  "advanced/user-calculated-attributes/operators/where.html": {
    "href": "advanced/user-calculated-attributes/operators/where.html",
    "title": "WHERE - Calculated Attribute Operator | ERP.net Tech Docs",
    "keywords": "WHERE - Calculated Attribute Operator Specification Value Description Clause which filters by the specified conditions. The second and the third parameters are optional. Parameter 1 Name Condition1 Parameter 1 Type boolean Parameter 2 Name boolean Parameter 2 Type Condition2 (optional) Parameter 3 Name boolean Parameter 3 Type Condition3 (optional) Return Value Clause, filtered by Condition1 AND Condition2 AND Condition3 Note The operator is used with operator SELECT ."
  },
  "advanced/user-calculated-attributes/overview.html": {
    "href": "advanced/user-calculated-attributes/overview.html",
    "title": "User Calculated Attributes | ERP.net Tech Docs",
    "keywords": "User Calculated Attributes User Calculated Attributes are user-defined objects, which extend the system entities. Calculated attributes are defined like formulas. When the value of a calculated attribute is requested, it is calculated \"on the fly\", in real time. Note Calculated attribute formulas are compiled to native executable format. Their calculation speed is very similar to the speed of the system defined calculated attributes. Example - Get default payment term days Suppose, that in a Sales Order, we want to display the customers default payment term (in days). In the Sales Order, we can define the following Calculated Attribute: No Operation Param1 Param2 Param3 10 GETREF REF:Customer ATTRIB:DefaultPaymentTermDays Explanation: GETREF - gets information from a related entity. The related entity is specified in Param1. The desired information is specified in Param2. Line number 10 is the only line in the calculated attribute The return value is the value of the attribute DefaultPaymentTermDays in the Customer entity. Example - Complex filter and summation The following calculated attribute sums all sales order lines, whose product: has a user data attribute, called \"CustPropPrj\", equal to '500' has a Name, containing the word 'Tool' No Operation Param1 Param2 Param3 10 SUM EXP:20 ATTRIB:LineAmount 20 FILTER CHILD:Lines EXP:30 30 IN ATTRIB:Product EXP:40 40 FILTER QUERY:Gen_Products EXP:50 50 AND EXP:60 EXP:70 60 EQUALS ATTRIB:CustPropPrj CONST:500 70 LIKE ATTRIB:Name CONST:'Tool' Explanation: Line 10: Iterates through the data set, specified on Line 20 (EXP:20), then SUMs the attribute LineAmount. Line 20: Filters the Lines subset with the filter, specified in Line 30 (EXP:30). Line 30: Creates a filter, which will be satisfied only by products, specified in the query on Line 40 (EXP:40). Line 40: Creates a query, which filters the products with the condition, specified on Line 50. Line 50: Specifies that the condition is comprised of two conditions, linked with AND. Line 60: Specifies that the first condition is the value of an attribute, called CustPropPrj should be 500. Line 70: Specifies that the second condition is that the Name of the product should contain 'Tool'. This example demonstrates, that Calculated Attributes can calculate very complicated formulas, query the database, get related values, etc."
  },
  "advanced/user-data-attributes/overview.html": {
    "href": "advanced/user-data-attributes/overview.html",
    "title": "User Data Attributes | ERP.net Tech Docs",
    "keywords": "User Data Attributes User Data Attributes (also called \"Custom Properties\") allow the user to extend the data model with custom attributes. User-Defined Data Attributes allow the storage of values in the database, extending the system tables. Similarity With System Data Attributes The user-defined data attributes behave mostly like the system data attributes. They can be shown in columns, grouped and filtered in navigators just like system attributes. Again similar to system attributes, they can have default values and shown in the view of data forms. Most of the time, the end users can't distinguish between system and user-defined attributes. It is up to the implementation team to define custom attributes, which fit best the implementation requirements. Note Many custom attributes can easily be defined and set as \"required\". However, this might endanger the whole ERP implementation, since requiring too much data entry for each operation can alienate the end users from the system. Carefully balance the business needs with the end user comfort. More Information To learn more about user-defined attributes (also called \"Custom Properties\"), select a topic below: Create User-Defined Data Attribute Documents And User-Defined Data Attributes"
  },
  "concepts/document-flow.html": {
    "href": "concepts/document-flow.html",
    "title": "Document Flow | ERP.net Tech Docs",
    "keywords": "Document Flow"
  },
  "concepts/documents.html": {
    "href": "concepts/documents.html",
    "title": "Documents | ERP.net Tech Docs",
    "keywords": "Documents"
  },
  "concepts/fulfillment.html": {
    "href": "concepts/fulfillment.html",
    "title": "Tracking Fulfillment | ERP.net Tech Docs",
    "keywords": "Tracking Fulfillment"
  },
  "concepts/multi-company.html": {
    "href": "concepts/multi-company.html",
    "title": "Multi-Company Support In ERP Instances | ERP.net Tech Docs",
    "keywords": "Multi-Company Support In ERP Instances"
  },
  "concepts/multi-language.html": {
    "href": "concepts/multi-language.html",
    "title": "Multi-Language Support | ERP.net Tech Docs",
    "keywords": "Multi-Language Support"
  },
  "concepts/overview.html": {
    "href": "concepts/overview.html",
    "title": "Business Logic Concepts | ERP.net Tech Docs",
    "keywords": "Business Logic Concepts This section contains concepts, applicable to all modules."
  },
  "includes/erpnet.html": {
    "href": "includes/erpnet.html",
    "title": "| ERP.net Tech Docs",
    "keywords": "ERP.net"
  },
  "includes/name.html": {
    "href": "includes/name.html",
    "title": "| ERP.net Tech Docs",
    "keywords": "ERP.net"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to the ERP.net Technical Documentation | ERP.net Tech Docs",
    "keywords": "Welcome to the ERP.net Technical Documentation The Technical Documentation documents the business logic of ERP.net. It is targeted towards implementation consultants and power users. Learn more Concepts - general concepts, which apply to all modules. Modules - functionality of specific modules. Reference - reference information about the entities, business rules, generations, etc."
  },
  "modules/applications/overview.html": {
    "href": "modules/applications/overview.html",
    "title": "ERP.net Integrated Applications | ERP.net Tech Docs",
    "keywords": "ERP.net Integrated Applications ERP.net contains various built-in applications."
  },
  "modules/community/overview.html": {
    "href": "modules/community/overview.html",
    "title": "ERP.net Community Management | ERP.net Tech Docs",
    "keywords": "ERP.net Community Management Community Management deals with the management of the external community of a company. This includes all sites, forums, ticketing and support systems involving external users. It also includes the social interaction between internal and external users. Learn More Notifications Social Interactions Digital Marketplace"
  },
  "modules/crm/overview.html": {
    "href": "modules/crm/overview.html",
    "title": "| ERP.net Tech Docs",
    "keywords": ""
  },
  "modules/financials/overview.html": {
    "href": "modules/financials/overview.html",
    "title": "ERP.net Financials | ERP.net Tech Docs",
    "keywords": "ERP.net Financials"
  },
  "modules/logistics/overview.html": {
    "href": "modules/logistics/overview.html",
    "title": "ERP.net Logistics | ERP.net Tech Docs",
    "keywords": "ERP.net Logistics"
  },
  "modules/overview.html": {
    "href": "modules/overview.html",
    "title": "ERP.net Modules | ERP.net Tech Docs",
    "keywords": "ERP.net Modules"
  },
  "modules/production/overview.html": {
    "href": "modules/production/overview.html",
    "title": "ERP.net Production | ERP.net Tech Docs",
    "keywords": "ERP.net Production"
  },
  "modules/projects/overview.html": {
    "href": "modules/projects/overview.html",
    "title": "ERP.net Project Management | ERP.net Tech Docs",
    "keywords": "ERP.net Project Management"
  },
  "README.html": {
    "href": "README.html",
    "title": "Welcome to the ERP.net Technical Documentation | ERP.net Tech Docs",
    "keywords": "Welcome to the ERP.net Technical Documentation The documentation uses DocFX to build."
  },
  "reference/overview.html": {
    "href": "reference/overview.html",
    "title": "| ERP.net Tech Docs",
    "keywords": ""
  }
}